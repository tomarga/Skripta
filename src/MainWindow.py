# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt6 UI code generator 6.1.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from pathlib import Path

from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QFileDialog

from src.FileTranscript import FileTranscript
from src.Util import Util


class Ui_MainWidget(QtWidgets.QMainWindow):
    audioExtensions = tuple(Util.getExtensionsForType('audio'))

    # Audio i video verzija
    # videoExtensions = tuple(Util.getExtensionsForType('video'))

    def setupUi(self, MainWidget):
        self.mainWidget = MainWidget
        MainWidget.setObjectName("MainWidget")
        MainWidget.resize(800, 800)
        MainWidget.setMaximumSize(QtCore.QSize(800, 800))
        MainWidget.setStatusTip("")
        MainWidget.setWhatsThis("")
        MainWidget.setAccessibleName("")
        MainWidget.setAccessibleDescription("")
        MainWidget.setAutoFillBackground(False)
        MainWidget.setStyleSheet("QWidget #MainWidget {\n"
                                 "    background-color: rgb(62, 62, 62)\n"
                                 "}")

        self.BackgroundLabel = QtWidgets.QLabel(MainWidget)
        self.BackgroundLabel.setGeometry(QtCore.QRect(-10, 0, 811, 801))
        self.BackgroundLabel.setText("")
        self.BackgroundLabel.setPixmap(QtGui.QPixmap("./resources/main-window.png"))
        self.BackgroundLabel.setScaledContents(True)
        self.BackgroundLabel.setObjectName("BackgroundLabel")

        self.RecordButton = QtWidgets.QPushButton(MainWidget)
        self.RecordButton.setGeometry(QtCore.QRect(194, 120, 183, 183))
        self.RecordButton.setStyleSheet("QPushButton {\n"
                                        "    border-radius: 91px;\n"
                                        "    background:  rgb(84, 164, 166);\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:hover {\n"
                                        "    background: #63C2C4;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed {\n"
                                        "    background: #63C2C4;\n"
                                        "    border: 3px solid white;\n"
                                        "}\n"
                                        "")
        self.RecordButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("./resources/mic.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.RecordButton.setIcon(icon)
        self.RecordButton.setIconSize(QtCore.QSize(150, 150))
        self.RecordButton.setCheckable(True)
        self.RecordButton.setObjectName("RecordButton")

        self.LoadButton = QtWidgets.QPushButton(MainWidget)
        self.LoadButton.setGeometry(QtCore.QRect(414, 483, 183, 183))
        self.LoadButton.setStyleSheet("QPushButton {\n"
                                      "    border-radius: 91px;\n"
                                      "    background: #9C8ABF;\n"
                                      "}\n"
                                      "\n"
                                      "QPushButton:hover {\n"
                                      "    background: #B8A2E1;\n"
                                      "}\n"
                                      "\n"
                                      "QPushButton:pressed {\n"
                                      "    background: #B8A2E1;\n"
                                      "    border: 3px solid white;\n"
                                      "}\n"
                                      "")
        self.LoadButton.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("./resources/audio.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.LoadButton.setIcon(icon1)
        self.LoadButton.setIconSize(QtCore.QSize(150, 150))
        self.LoadButton.setCheckable(True)
        self.LoadButton.setObjectName("LoadButton")
        self.LoadButton.clicked.connect(self.loadButtonClicked)

    # handle file load
    def loadButtonClicked(self):
        # Audio i Video verzija
        # file = QFileDialog.getOpenFileName(self, 'Izaberi audio/video datoteku', str(Path.home()),
        #                                            "Audio/Video files {}".format(Util.listExtensionsAsString(
        #                                                 Ui_MainWidget.audioExtensions + Ui_MainWidget.videoExtensions)))

        file = QFileDialog.getOpenFileName(self, 'Izaberi audio datoteku', str(Path.home()),
                                           "Audio files {}".format(Util.listExtensionsAsString(
                                               Ui_MainWidget.audioExtensions)))

        if file[0] and file[1]:
            fileTranscript = FileTranscript(file[0], self.mainWidget)

    @staticmethod
    def retranslateUi(MainWidget):
        _translate = QtCore.QCoreApplication.translate
        MainWidget.setWindowTitle(_translate("MainWidget", "Skripta"))
